# Generated by Django 4.2.7 on 2025-08-12 08:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('method_type', models.CharField(choices=[('BANK_TRANSFER', '银行转账'), ('MOBILE_MONEY', '移动货币'), ('PAYMENT_GATEWAY', '支付网关'), ('CRYPTO', '加密货币')], max_length=20)),
                ('provider', models.CharField(choices=[('PAYSTACK', 'Paystack'), ('FLUTTERWAVE', 'Flutterwave'), ('OPAY', 'OPay'), ('PALMPAY', 'PalmPay'), ('MONIEPOINT', 'Moniepoint'), ('MANUAL', '手动处理')], max_length=20)),
                ('config', models.JSONField(default=dict)),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=15)),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), max_digits=15)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=Decimal('5000000.00'), max_digits=15)),
                ('fee_type', models.CharField(choices=[('FIXED', '固定'), ('PERCENTAGE', '百分比')], default='PERCENTAGE', max_length=10)),
                ('fee_value', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deposit_enabled', models.BooleanField(default=True)),
                ('is_withdraw_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='UserBalance',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='balance', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('main_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='主余额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bonus_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='奖金余额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frozen_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='冻结余额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_balances',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('DEPOSIT', '存款'), ('WITHDRAW', '提款'), ('BET', '投注'), ('WIN', '中奖'), ('REWARD', '奖励'), ('REFUND', '退款'), ('ADJUSTMENT', '调整'), ('TRANSFER_IN', '转入'), ('TRANSFER_OUT', '转出')], db_index=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('actual_amount', models.DecimalField(decimal_places=2, help_text='实际到账金额', max_digits=15)),
                ('status', models.CharField(choices=[('PENDING', '待处理'), ('PROCESSING', '处理中'), ('COMPLETED', '已完成'), ('FAILED', '失败'), ('CANCELLED', '已取消')], db_index=True, default='PENDING', max_length=20)),
                ('reference_id', models.CharField(blank=True, help_text='外部参考ID', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_transactions', to=settings.AUTH_USER_MODEL)),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_code', models.CharField(choices=[('ACCESS', 'Access Bank'), ('GTB', 'Guaranty Trust Bank'), ('ZENITH', 'Zenith Bank'), ('UBA', 'United Bank for Africa'), ('FIRST', 'First Bank of Nigeria'), ('FIDELITY', 'Fidelity Bank'), ('UNION', 'Union Bank'), ('STERLING', 'Sterling Bank'), ('STANBIC', 'Stanbic IBTC Bank'), ('FCMB', 'First City Monument Bank'), ('ECOBANK', 'Ecobank Nigeria'), ('DIAMOND', 'Diamond Bank'), ('HERITAGE', 'Heritage Bank'), ('KEYSTONE', 'Keystone Bank'), ('POLARIS', 'Polaris Bank'), ('PROVIDUS', 'Providus Bank'), ('SUNTRUST', 'SunTrust Bank'), ('TITAN', 'Titan Trust Bank'), ('UNITY', 'Unity Bank'), ('WEMA', 'Wema Bank')], max_length=20)),
                ('account_number', models.CharField(max_length=20)),
                ('account_name', models.CharField(help_text='账户名，必须与注册姓名一致', max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_default', models.BooleanField(default=False)),
                ('verification_data', models.JSONField(blank=True, default=dict)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='BalanceLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ADD', '增加'), ('DEDUCT', '扣除'), ('FREEZE', '冻结'), ('UNFREEZE', '解冻'), ('TRANSFER', '转账')], db_index=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance_before', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'balance_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'created_at'], name='transaction_user_id_294647_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['type', 'status'], name='transaction_type_f4191c_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_id'], name='transaction_referen_897c8a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at', 'status'], name='transaction_created_0a9ea8_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['user', 'is_default'], name='bank_accoun_user_id_01fe85_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['account_number', 'bank_code'], name='bank_accoun_account_497ce6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bankaccount',
            unique_together={('user', 'bank_code', 'account_number')},
        ),
        migrations.AddIndex(
            model_name='balancelog',
            index=models.Index(fields=['user', 'created_at'], name='balance_log_user_id_dd9410_idx'),
        ),
        migrations.AddIndex(
            model_name='balancelog',
            index=models.Index(fields=['type', 'created_at'], name='balance_log_type_a41554_idx'),
        ),
    ]
