# Generated by Django 4.2.7 on 2025-08-12 08:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('reward_rate', models.DecimalField(decimal_places=4, help_text='奖励比例', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('name', models.CharField(help_text='等级名称', max_length=50)),
                ('description', models.TextField(help_text='等级描述')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '推荐奖励配置',
                'verbose_name_plural': '推荐奖励配置',
                'db_table': 'referral_reward',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='RewardStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='统计日期', unique=True)),
                ('total_rebate_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='总返水金额', max_digits=15)),
                ('total_rebate_users', models.IntegerField(default=0, help_text='返水用户数')),
                ('total_referral_reward', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='总推荐奖励', max_digits=15)),
                ('total_referral_users', models.IntegerField(default=0, help_text='获得推荐奖励用户数')),
                ('vip_distribution', models.JSONField(default=dict, help_text='VIP等级分布')),
                ('total_reward_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='总奖励金额', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '奖励统计',
                'verbose_name_plural': '奖励统计',
                'db_table': 'reward_statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='VIPLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(help_text='VIP等级 (0-7)', unique=True)),
                ('name', models.CharField(help_text='等级名称', max_length=50)),
                ('required_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='升级所需累计有效流水', max_digits=15)),
                ('rebate_rate', models.DecimalField(decimal_places=4, help_text='统一返水比例 (0.0038-0.0080)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('daily_withdraw_limit', models.DecimalField(decimal_places=2, default=Decimal('50000.00'), help_text='每日提现限额', max_digits=15)),
                ('daily_withdraw_times', models.IntegerField(default=1, help_text='每日提现次数')),
                ('withdraw_fee_rate', models.DecimalField(decimal_places=4, default=Decimal('0.02'), help_text='提现手续费率 (0.02-0.00)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('monthly_bonus', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='月度奖金', max_digits=10)),
                ('birthday_bonus', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='生日奖金', max_digits=10)),
                ('priority_support', models.BooleanField(default=False, help_text='优先客服')),
                ('dedicated_manager', models.BooleanField(default=False, help_text='专属客服经理')),
                ('exclusive_promotions', models.BooleanField(default=False, help_text='专属活动')),
                ('higher_bonus_rates', models.BooleanField(default=False, help_text='更高奖金倍率')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'VIP等级',
                'verbose_name_plural': 'VIP等级',
                'db_table': 'vip_level',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='UserVIPStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='累计有效流水', max_digits=15)),
                ('monthly_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='本月有效流水', max_digits=15)),
                ('upgrade_time', models.DateTimeField(blank=True, help_text='最后升级时间', null=True)),
                ('next_level_turnover', models.DecimalField(blank=True, decimal_places=2, help_text='下一级所需流水', max_digits=15, null=True)),
                ('total_rebate_received', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='累计返水金额', max_digits=15)),
                ('monthly_rebate_received', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='本月返水金额', max_digits=15)),
                ('daily_withdraw_used', models.IntegerField(default=0, help_text='今日已用提现次数')),
                ('daily_withdraw_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='今日已提现金额', max_digits=15)),
                ('last_withdraw_date', models.DateField(blank=True, help_text='最后提现日期', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='rewards.viplevel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vip_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户VIP状态',
                'verbose_name_plural': '用户VIP状态',
                'db_table': 'user_vip_status',
            },
        ),
        migrations.CreateModel(
            name='UserReferralStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_referrals', models.IntegerField(default=0, help_text='总推荐人数')),
                ('active_referrals', models.IntegerField(default=0, help_text='活跃推荐人数')),
                ('level1_count', models.IntegerField(default=0, help_text='一级推荐人数')),
                ('level2_count', models.IntegerField(default=0, help_text='二级推荐人数')),
                ('level3_count', models.IntegerField(default=0, help_text='三级推荐人数')),
                ('level4_count', models.IntegerField(default=0, help_text='四级推荐人数')),
                ('level5_count', models.IntegerField(default=0, help_text='五级推荐人数')),
                ('level6_count', models.IntegerField(default=0, help_text='六级推荐人数')),
                ('level7_count', models.IntegerField(default=0, help_text='七级推荐人数')),
                ('total_reward_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='累计推荐奖励', max_digits=15)),
                ('monthly_reward_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='本月推荐奖励', max_digits=15)),
                ('team_total_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='团队总流水', max_digits=15)),
                ('team_monthly_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='团队本月流水', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户推荐统计',
                'verbose_name_plural': '用户推荐统计',
                'db_table': 'user_referral_stats',
            },
        ),
        migrations.CreateModel(
            name='RewardCalculation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_date', models.DateField(help_text='计算周期日期')),
                ('period_type', models.CharField(choices=[('DAILY', '每日'), ('WEEKLY', '每周'), ('MONTHLY', '每月')], default='DAILY', help_text='计算周期类型', max_length=20)),
                ('vip_level', models.IntegerField(help_text='计算时的VIP等级')),
                ('total_turnover', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='周期内总有效流水', max_digits=15)),
                ('rebate_rate', models.DecimalField(decimal_places=4, default=Decimal('0.00'), help_text='返水比例', max_digits=5)),
                ('rebate_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='个人返水金额', max_digits=15)),
                ('referral_reward_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='推荐奖励金额', max_digits=15)),
                ('referral_reward_breakdown', models.JSONField(default=dict, help_text='推荐奖励明细 {level: amount}')),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='其他奖金(生日奖金、月度奖金等)', max_digits=15)),
                ('total_reward_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='总奖励金额', max_digits=15)),
                ('status', models.CharField(choices=[('CALCULATED', '已计算'), ('PAID', '已发放'), ('CANCELLED', '已取消')], default='CALCULATED', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, help_text='发放时间', null=True)),
                ('transaction_ids', models.JSONField(default=list, help_text='相关交易ID列表')),
                ('remark', models.TextField(blank=True, help_text='备注', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_calculations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '奖励计算记录',
                'verbose_name_plural': '奖励计算记录',
                'db_table': 'reward_calculation',
                'ordering': ['-period_date', '-created_at'],
                'indexes': [models.Index(fields=['user', 'period_date'], name='reward_calc_user_id_6ae4ca_idx'), models.Index(fields=['status', 'period_date'], name='reward_calc_status_f38622_idx'), models.Index(fields=['period_type', 'period_date'], name='reward_calc_period__d43146_idx')],
                'unique_together': {('user', 'period_date', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='ReferralRewardRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_date', models.DateField(help_text='奖励周期日期')),
                ('referral_level', models.IntegerField(help_text='推荐层级')),
                ('reward_rate', models.DecimalField(decimal_places=4, help_text='奖励比例', max_digits=5)),
                ('referee_turnover', models.DecimalField(decimal_places=2, help_text='下级有效流水', max_digits=15)),
                ('reward_amount', models.DecimalField(decimal_places=2, help_text='奖励金额', max_digits=15)),
                ('status', models.CharField(choices=[('PENDING', '待发放'), ('PAID', '已发放'), ('CANCELLED', '已取消')], default='PENDING', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, help_text='发放时间', null=True)),
                ('transaction_id', models.UUIDField(blank=True, help_text='交易ID', null=True)),
                ('remark', models.TextField(blank=True, help_text='备注', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_rewards', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_rewards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '推荐奖励记录',
                'verbose_name_plural': '推荐奖励记录',
                'db_table': 'referral_reward_record',
                'ordering': ['-period_date', '-created_at'],
                'indexes': [models.Index(fields=['referrer', 'period_date'], name='referral_re_referre_dd9bf1_idx'), models.Index(fields=['referee', 'period_date'], name='referral_re_referee_908f33_idx'), models.Index(fields=['status', 'period_date'], name='referral_re_status_302c39_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReferralRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('referral_code', models.CharField(help_text='使用的推荐码', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='关系是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_relation', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '推荐关系',
                'verbose_name_plural': '推荐关系',
                'db_table': 'referral_relation',
                'indexes': [models.Index(fields=['referrer', 'level'], name='referral_re_referre_000b7a_idx'), models.Index(fields=['referee'], name='referral_re_referee_e3ecb8_idx'), models.Index(fields=['referral_code'], name='referral_re_referra_3042ac_idx')],
                'unique_together': {('referrer', 'referee')},
            },
        ),
        migrations.CreateModel(
            name='RebateRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_date', models.DateField(help_text='返水周期日期')),
                ('vip_level', models.IntegerField(help_text='返水时的VIP等级')),
                ('rebate_rate', models.DecimalField(decimal_places=4, help_text='返水比例', max_digits=5)),
                ('total_turnover', models.DecimalField(decimal_places=2, help_text='有效流水', max_digits=15)),
                ('game_turnover_breakdown', models.JSONField(default=dict, help_text='各游戏流水明细')),
                ('rebate_amount', models.DecimalField(decimal_places=2, help_text='返水金额', max_digits=15)),
                ('status', models.CharField(choices=[('PENDING', '待发放'), ('PAID', '已发放'), ('CANCELLED', '已取消')], default='PENDING', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, help_text='发放时间', null=True)),
                ('transaction_id', models.UUIDField(blank=True, help_text='交易ID', null=True)),
                ('remark', models.TextField(blank=True, help_text='备注', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rebate_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '返水记录',
                'verbose_name_plural': '返水记录',
                'db_table': 'rebate_record',
                'ordering': ['-period_date', '-created_at'],
                'indexes': [models.Index(fields=['user', 'period_date'], name='rebate_reco_user_id_46bece_idx'), models.Index(fields=['status', 'period_date'], name='rebate_reco_status_29f757_idx')],
                'unique_together': {('user', 'period_date')},
            },
        ),
    ]
