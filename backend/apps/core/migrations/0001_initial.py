# Generated by Django 4.2.7 on 2025-08-12 08:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=100, unique=True)),
                ('value', models.TextField()),
                ('config_type', models.CharField(choices=[('SYSTEM', '系统配置'), ('GAME', '游戏配置'), ('PAYMENT', '支付配置'), ('SECURITY', '安全配置'), ('NOTIFICATION', '通知配置'), ('MAINTENANCE', '维护配置')], default='SYSTEM', max_length=20, verbose_name='配置类型')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '系统配置',
                'verbose_name_plural': '系统配置',
                'db_table': 'system_configs',
                'ordering': ['config_type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('threat_type', models.CharField(choices=[('IP_BLACKLIST', 'IP黑名单'), ('MALWARE_HASH', '恶意软件哈希'), ('SUSPICIOUS_DOMAIN', '可疑域名'), ('ATTACK_PATTERN', '攻击模式'), ('VULNERABILITY', '漏洞信息')], max_length=50, verbose_name='威胁类型')),
                ('indicator', models.CharField(max_length=500, verbose_name='威胁指标')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('confidence_level', models.IntegerField(default=50, verbose_name='置信度')),
                ('severity', models.CharField(choices=[('INFO', '信息'), ('WARNING', '警告'), ('HIGH', '高危'), ('CRITICAL', '严重')], default='INFO', max_length=20, verbose_name='严重程度')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='来源')),
                ('first_seen', models.DateTimeField(auto_now_add=True, verbose_name='首次发现')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='最后发现')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('metadata', models.JSONField(default=dict, verbose_name='元数据')),
            ],
            options={
                'verbose_name': '威胁情报',
                'verbose_name_plural': '威胁情报',
                'db_table': 'threat_intelligence',
                'ordering': ['-last_seen'],
                'indexes': [models.Index(fields=['threat_type', 'is_active'], name='threat_inte_threat__ff7863_idx'), models.Index(fields=['indicator'], name='threat_inte_indicat_9169c5_idx'), models.Index(fields=['severity'], name='threat_inte_severit_58318d_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_name', models.CharField(max_length=100, verbose_name='指标名称')),
                ('value', models.FloatField(verbose_name='指标值')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='单位')),
                ('server_name', models.CharField(blank=True, max_length=50, verbose_name='服务器名称')),
                ('warning_threshold', models.FloatField(blank=True, null=True, verbose_name='警告阈值')),
                ('critical_threshold', models.FloatField(blank=True, null=True, verbose_name='严重阈值')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='元数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': '性能指标',
                'verbose_name_plural': '性能指标',
                'db_table': 'performance_metrics',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['metric_name', 'created_at'], name='performance_metric__3f664c_idx'), models.Index(fields=['server_name', 'created_at'], name='performance_server__4e3837_idx')],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceMode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_enabled', models.BooleanField(default=False, verbose_name='是否启用维护模式')),
                ('title', models.CharField(default='系统维护中', max_length=200, verbose_name='维护标题')),
                ('message', models.TextField(default='系统正在维护中，请稍后再试', verbose_name='维护消息')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('allowed_ips', models.JSONField(blank=True, default=list, verbose_name='允许访问的IP')),
                ('affected_modules', models.JSONField(blank=True, default=list, verbose_name='影响的模块')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '维护模式',
                'verbose_name_plural': '维护模式',
                'db_table': 'maintenance_mode',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('game_type', models.CharField(choices=[('11x5', '11选5'), ('superlotto', '大乐透'), ('scratch666', '666刮刮乐'), ('sports', '体育博彩')], max_length=20, verbose_name='游戏类型')),
                ('config_key', models.CharField(max_length=100, verbose_name='配置键')),
                ('config_value', models.JSONField(verbose_name='配置值')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '游戏配置',
                'verbose_name_plural': '游戏配置',
                'db_table': 'game_configs',
                'ordering': ['game_type', 'config_key'],
                'unique_together': {('game_type', 'config_key')},
            },
        ),
        migrations.CreateModel(
            name='VulnerabilityScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scan_id', models.CharField(max_length=100, unique=True, verbose_name='扫描ID')),
                ('scan_type', models.CharField(max_length=50, verbose_name='扫描类型')),
                ('status', models.CharField(choices=[('PENDING', '待处理'), ('RUNNING', '运行中'), ('COMPLETED', '已完成'), ('FAILED', '失败')], default='PENDING', max_length=20, verbose_name='状态')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('results', models.JSONField(default=dict, verbose_name='扫描结果')),
                ('summary', models.JSONField(default=dict, verbose_name='结果摘要')),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发起人')),
            ],
            options={
                'verbose_name': '漏洞扫描',
                'verbose_name_plural': '漏洞扫描',
                'db_table': 'vulnerability_scans',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['scan_type', 'status'], name='vulnerabili_scan_ty_1e4db6_idx'), models.Index(fields=['started_at'], name='vulnerabili_started_3b1c2f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('DEBUG', 'DEBUG'), ('INFO', 'INFO'), ('WARNING', 'WARNING'), ('ERROR', 'ERROR'), ('CRITICAL', 'CRITICAL')], default='INFO', max_length=10, verbose_name='日志级别')),
                ('module', models.CharField(max_length=50, verbose_name='模块名称')),
                ('message', models.TextField(verbose_name='日志消息')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='额外数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '系统日志',
                'verbose_name_plural': '系统日志',
                'db_table': 'system_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['level', 'created_at'], name='system_logs_level_5a2647_idx'), models.Index(fields=['module', 'created_at'], name='system_logs_module_58dcb0_idx'), models.Index(fields=['user', 'created_at'], name='system_logs_user_id_9ba726_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_id', models.CharField(max_length=100, unique=True, verbose_name='事件ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(verbose_name='描述')),
                ('status', models.CharField(choices=[('OPEN', '开放'), ('INVESTIGATING', '调查中'), ('RESOLVED', '已解决'), ('CLOSED', '已关闭')], default='OPEN', max_length=20, verbose_name='状态')),
                ('priority', models.CharField(choices=[('LOW', '低'), ('MEDIUM', '中'), ('HIGH', '高'), ('CRITICAL', '严重')], default='MEDIUM', max_length=20, verbose_name='优先级')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='解决时间')),
                ('metadata', models.JSONField(default=dict, verbose_name='元数据')),
                ('affected_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='受影响用户')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL, verbose_name='分配给')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_incidents', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '安全事件',
                'verbose_name_plural': '安全事件',
                'db_table': 'security_incidents',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'priority'], name='security_in_status_da61b5_idx'), models.Index(fields=['created_at'], name='security_in_created_ce3e67_idx'), models.Index(fields=['assigned_to'], name='security_in_assigne_9d13ac_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('LOGIN_FAILED', '登录失败'), ('SUSPICIOUS_ACTIVITY', '可疑活动'), ('LARGE_TRANSACTION', '大额交易'), ('MULTIPLE_ACCOUNTS', '多账户关联'), ('IP_CHANGE', 'IP地址变更'), ('DEVICE_CHANGE', '设备变更'), ('KYC_FRAUD', 'KYC欺诈'), ('BETTING_ANOMALY', '投注异常'), ('WITHDRAWAL_RISK', '提款风险'), ('SYSTEM_INTRUSION', '系统入侵')], max_length=30, verbose_name='事件类型')),
                ('severity', models.CharField(choices=[('LOW', '低'), ('MEDIUM', '中'), ('HIGH', '高'), ('CRITICAL', '严重')], default='MEDIUM', max_length=10, verbose_name='严重程度')),
                ('description', models.TextField(verbose_name='事件描述')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('event_data', models.JSONField(blank=True, default=dict, verbose_name='事件数据')),
                ('status', models.CharField(choices=[('OPEN', '待处理'), ('INVESTIGATING', '调查中'), ('RESOLVED', '已解决'), ('FALSE_POSITIVE', '误报')], default='OPEN', max_length=20, verbose_name='处理状态')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('resolution', models.TextField(blank=True, verbose_name='处理结果')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_security_events', to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='相关用户')),
            ],
            options={
                'verbose_name': '安全事件',
                'verbose_name_plural': '安全事件',
                'db_table': 'security_events',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'severity', 'created_at'], name='security_ev_event_t_b10153_idx'), models.Index(fields=['user', 'created_at'], name='security_ev_user_id_70c595_idx'), models.Index(fields=['status', 'created_at'], name='security_ev_status_91d042_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100, verbose_name='事件类型')),
                ('details', models.JSONField(default=dict, verbose_name='详细信息')),
                ('severity', models.CharField(choices=[('INFO', '信息'), ('WARNING', '警告'), ('HIGH', '高危'), ('CRITICAL', '严重')], default='INFO', max_length=20, verbose_name='严重程度')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='时间戳')),
                ('resolved', models.BooleanField(default=False, verbose_name='已解决')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='解决时间')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_logs', to=settings.AUTH_USER_MODEL, verbose_name='解决人')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '安全审计日志',
                'verbose_name_plural': '安全审计日志',
                'db_table': 'security_audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='security_au_event_t_48883e_idx'), models.Index(fields=['severity', 'resolved'], name='security_au_severit_fae09a_idx'), models.Index(fields=['user', 'timestamp'], name='security_au_user_id_75039c_idx'), models.Index(fields=['ip_address'], name='security_au_ip_addr_1e5057_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('INFO', '信息'), ('SUCCESS', '成功'), ('WARNING', '警告'), ('ERROR', '错误')], default='INFO', max_length=10)),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read', 'created_at'], name='notificatio_user_id_5cf777_idx')],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('LOGIN', '登录'), ('LOGOUT', '登出'), ('REGISTER', '注册'), ('KYC_SUBMIT', 'KYC提交'), ('KYC_APPROVE', 'KYC通过'), ('KYC_REJECT', 'KYC拒绝'), ('VIP_UPGRADE', 'VIP升级'), ('DEPOSIT', '存款'), ('WITHDRAW', '提款'), ('BET_PLACE', '投注'), ('BET_WIN', '中奖'), ('REWARD_RECEIVE', '奖励发放')], db_index=True, max_length=20)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'action', 'created_at'], name='activity_lo_user_id_9a0a50_idx'), models.Index(fields=['action', 'created_at'], name='activity_lo_action_0f3584_idx')],
            },
        ),
    ]
